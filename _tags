# OASIS_START
# DO NOT EDIT (digest: c348eeadfb15aa1af2d805f976b82290)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library cross-platform
"src/cross-platform-for-ocamlbuild/cross-platform.cmxs": use_cross-platform
<src/cross-platform-for-ocamlbuild/*.ml{,i,y}>: pkg_batteries
<src/cross-platform-for-ocamlbuild/*.ml{,i,y}>: pkg_cryptokit
<src/cross-platform-for-ocamlbuild/*.ml{,i,y}>: pkg_hex
<src/cross-platform-for-ocamlbuild/*.ml{,i,y}>: pkg_rope
# Library basics
"src/basics/basics.cmxs": use_basics
<src/basics/*.ml{,i,y}>: pkg_batteries
<src/basics/*.ml{,i,y}>: pkg_cryptokit
<src/basics/*.ml{,i,y}>: pkg_hex
<src/basics/*.ml{,i,y}>: pkg_rope
<src/basics/*.ml{,i,y}>: use_cross-platform
# Library ast
"src/ast/ast.cmxs": use_ast
<src/ast/*.ml{,i,y}>: pkg_batteries
<src/ast/*.ml{,i,y}>: pkg_cryptokit
<src/ast/*.ml{,i,y}>: pkg_hex
<src/ast/*.ml{,i,y}>: pkg_rope
<src/ast/*.ml{,i,y}>: use_basics
<src/ast/*.ml{,i,y}>: use_cross-platform
# Library parse
"src/parse/parse.cmxs": use_parse
<src/parse/*.ml{,i,y}>: pkg_batteries
<src/parse/*.ml{,i,y}>: pkg_cryptokit
<src/parse/*.ml{,i,y}>: pkg_hex
<src/parse/*.ml{,i,y}>: pkg_menhirLib
<src/parse/*.ml{,i,y}>: pkg_rope
<src/parse/*.ml{,i,y}>: use_ast
<src/parse/*.ml{,i,y}>: use_basics
<src/parse/*.ml{,i,y}>: use_cross-platform
# Library codegen
"src/codegen/codegen.cmxs": use_codegen
<src/codegen/*.ml{,i,y}>: pkg_batteries
<src/codegen/*.ml{,i,y}>: pkg_cryptokit
<src/codegen/*.ml{,i,y}>: pkg_hex
<src/codegen/*.ml{,i,y}>: pkg_menhirLib
<src/codegen/*.ml{,i,y}>: pkg_rope
<src/codegen/*.ml{,i,y}>: use_ast
<src/codegen/*.ml{,i,y}>: use_basics
<src/codegen/*.ml{,i,y}>: use_cross-platform
<src/codegen/*.ml{,i,y}>: use_parse
# Executable bamboo
<src/exec/bamboo.{native,byte}>: pkg_batteries
<src/exec/bamboo.{native,byte}>: pkg_cryptokit
<src/exec/bamboo.{native,byte}>: pkg_hex
<src/exec/bamboo.{native,byte}>: pkg_menhirLib
<src/exec/bamboo.{native,byte}>: pkg_rope
<src/exec/bamboo.{native,byte}>: use_ast
<src/exec/bamboo.{native,byte}>: use_basics
<src/exec/bamboo.{native,byte}>: use_codegen
<src/exec/bamboo.{native,byte}>: use_cross-platform
<src/exec/bamboo.{native,byte}>: use_parse
<src/exec/*.ml{,i,y}>: pkg_batteries
<src/exec/*.ml{,i,y}>: pkg_cryptokit
<src/exec/*.ml{,i,y}>: pkg_hex
<src/exec/*.ml{,i,y}>: pkg_menhirLib
<src/exec/*.ml{,i,y}>: pkg_rope
<src/exec/*.ml{,i,y}>: use_ast
<src/exec/*.ml{,i,y}>: use_basics
<src/exec/*.ml{,i,y}>: use_codegen
<src/exec/*.ml{,i,y}>: use_cross-platform
<src/exec/*.ml{,i,y}>: use_parse
# OASIS_STOP
true: use_menhir
<bamboo-tests>: -traverse
<lib/bs>: -traverse
<node_modules>: -traverse
<batteries-included>: -traverse